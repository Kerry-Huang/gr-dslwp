#%matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
import scipy.signal
#import asm_common
plt.rcParams.update({'font.size': 7})
plt.rcParams.update({'lines.linewidth': 0.75})
plt.rcParams.update({'lines.markersize': 3})
plt.rcParams.update({'font.family': "Helvetica"})

taps = [0.986752+0.162236j, 0.961165+0.275976j, 0.909253+0.416245j, 0.823810+0.566866j, 0.704089+0.710112j, 0.554654+0.832081j, 0.382467+0.923969j, 0.195052+0.980793j, 0.000006+1.000000j, -0.195011+0.980801j, -0.382250+0.924059j, -0.553737+0.832692j, -0.701059+0.713104j, -0.815998+0.578055j, -0.893407+0.449249j, -0.934886+0.354949j, -0.947363+0.320163j, -0.934914+0.354874j, -0.893617+0.448830j, -0.817269+0.576256j, -0.707107+0.707107j, -0.576256+0.817269j, -0.448830+0.893617j, -0.354872+0.934915j, -0.320152+0.947366j, -0.354872+0.934915j, -0.448830+0.893617j, -0.576256+0.817269j, -0.707107+0.707107j, -0.817269+0.576256j, -0.893617+0.448830j, -0.934915+0.354872j, -0.947366+0.320152j, -0.934915+0.354872j, -0.893617+0.448830j, -0.817269+0.576256j, -0.707107+0.707107j, -0.576256+0.817269j, -0.448830+0.893617j, -0.354874+0.934914j, -0.320163+0.947363j, -0.354949+0.934886j, -0.449249+0.893407j, -0.578055+0.815998j, -0.713104+0.701059j, -0.832692+0.553737j, -0.924059+0.382250j, -0.980801+0.195010j, -1.000000-0.000012j, -0.980785-0.195092j, -0.923879-0.382684j, -0.831470-0.555570j, -0.707107-0.707107j, -0.555570-0.831470j, -0.382683-0.923880j, -0.195090-0.980785j, -0.000000-1.000000j, 0.195090-0.980785j, 0.382683-0.923880j, 0.555570-0.831470j, 0.707107-0.707107j, 0.831470-0.555570j, 0.923879-0.382684j, 0.980785-0.195092j, 1.000000-0.000012j, 0.980801+0.195010j, 0.924059+0.382250j, 0.832692+0.553737j, 0.713104+0.701059j, 0.578055+0.815998j, 0.449249+0.893407j, 0.354949+0.934886j, 0.320163+0.947363j, 0.354874+0.934914j, 0.448830+0.893617j, 0.576256+0.817269j, 0.707107+0.707107j, 0.817269+0.576256j, 0.893617+0.448830j, 0.934914+0.354874j, 0.947363+0.320163j, 0.934886+0.354949j, 0.893407+0.449249j, 0.815998+0.578055j, 0.701059+0.713104j, 0.553737+0.832692j, 0.382250+0.924059j, 0.195012+0.980801j, 0.000000+1.000000j, -0.195012+0.980801j, -0.382250+0.924059j, -0.553737+0.832692j, -0.701059+0.713104j, -0.815998+0.578055j, -0.893407+0.449249j, -0.934885+0.354950j, -0.947359+0.320174j, -0.934885+0.354950j, -0.893407+0.449249j, -0.815998+0.578055j, -0.701059+0.713104j, -0.553737+0.832692j, -0.382250+0.924059j, -0.195010+0.980801j, 0.000012+1.000000j, 0.195092+0.980785j, 0.382684+0.923879j, 0.555570+0.831470j, 0.707107+0.707107j, 0.831470+0.555570j, 0.923879+0.382684j, 0.980785+0.195092j, 1.000000+0.000012j, 0.980801-0.195010j, 0.924059-0.382250j, 0.832692-0.553737j, 0.713104-0.701059j, 0.578055-0.815998j, 0.449249-0.893407j, 0.354950-0.934885j, 0.320174-0.947359j, 0.354950-0.934885j, 0.449249-0.893407j, 0.578055-0.815998j, 0.713104-0.701059j, 0.832692-0.553737j, 0.924059-0.382250j, 0.980801-0.195012j, 1.000000-0.000000j, 0.980801+0.195012j, 0.924059+0.382250j, 0.832692+0.553737j, 0.713104+0.701059j, 0.578055+0.815998j, 0.449249+0.893407j, 0.354950+0.934885j, 0.320174+0.947359j, 0.354950+0.934885j, 0.449249+0.893407j, 0.578055+0.815998j, 0.713104+0.701059j, 0.832692+0.553737j, 0.924059+0.382250j, 0.980801+0.195012j, 1.000000-0.000000j, 0.980801-0.195012j, 0.924059-0.382250j, 0.832692-0.553737j, 0.713104-0.701059j, 0.578055-0.815998j, 0.449249-0.893407j, 0.354950-0.934885j, 0.320174-0.947359j, 0.354950-0.934885j, 0.449249-0.893407j, 0.578055-0.815998j, 0.713104-0.701059j, 0.832692-0.553737j, 0.924059-0.382250j, 0.980801-0.195012j, 1.000000-0.000000j, 0.980801+0.195012j, 0.924059+0.382250j, 0.832692+0.553737j, 0.713104+0.701059j, 0.578055+0.815998j, 0.449249+0.893407j, 0.354950+0.934885j, 0.320174+0.947359j, 0.354950+0.934885j, 0.449249+0.893407j, 0.578055+0.815998j, 0.713104+0.701059j, 0.832692+0.553737j, 0.924059+0.382250j, 0.980801+0.195010j, 1.000000-0.000012j, 0.980785-0.195092j, 0.923879-0.382684j, 0.831470-0.555570j, 0.707107-0.707107j, 0.555570-0.831470j, 0.382684-0.923879j, 0.195092-0.980785j, 0.000012-1.000000j, -0.195010-0.980801j, -0.382250-0.924059j, -0.553737-0.832692j, -0.701059-0.713104j, -0.815998-0.578055j, -0.893407-0.449249j, -0.934885-0.354950j, -0.947359-0.320174j, -0.934885-0.354950j, -0.893407-0.449249j, -0.815998-0.578055j, -0.701059-0.713104j, -0.553737-0.832692j, -0.382250-0.924059j, -0.195010-0.980801j, 0.000012-1.000000j, 0.195092-0.980785j, 0.382684-0.923879j, 0.555570-0.831470j, 0.707107-0.707107j, 0.831470-0.555570j, 0.923880-0.382683j, 0.980785-0.195090j, 1.000000-0.000000j, 0.980785+0.195090j, 0.923880+0.382683j, 0.831470+0.555570j, 0.707107+0.707107j, 0.555570+0.831470j, 0.382684+0.923879j, 0.195092+0.980785j, 0.000012+1.000000j, -0.195010+0.980801j, -0.382250+0.924059j, -0.553737+0.832692j, -0.701059+0.713104j, -0.815998+0.578055j, -0.893407+0.449249j, -0.934885+0.354950j, -0.947359+0.320174j, -0.934885+0.354950j, -0.893407+0.449249j, -0.815998+0.578055j, -0.701059+0.713104j, -0.553737+0.832692j, -0.382250+0.924059j, -0.195010+0.980801j, 0.000012+1.000000j, 0.195092+0.980785j, 0.382684+0.923879j, 0.555570+0.831470j, 0.707107+0.707107j, 0.831470+0.555570j, 0.923879+0.382684j, 0.980785+0.195092j, 1.000000+0.000012j, 0.980801-0.195010j, 0.924059-0.382250j, 0.832692-0.553737j, 0.713104-0.701059j, 0.578055-0.815998j, 0.449249-0.893407j, 0.354950-0.934885j, 0.320174-0.947359j, 0.354950-0.934885j, 0.449249-0.893407j, 0.578055-0.815998j, 0.713104-0.701059j, 0.832692-0.553737j, 0.924059-0.382250j, 0.980801-0.195010j, 1.000000+0.000012j, 0.980785+0.195092j, 0.923879+0.382684j, 0.831470+0.555570j, 0.707107+0.707107j, 0.555570+0.831470j, 0.382683+0.923880j, 0.195090+0.980785j, 0.000000+1.000000j, -0.195090+0.980785j, -0.382683+0.923880j, -0.555570+0.831470j, -0.707107+0.707107j, -0.831470+0.555570j, -0.923879+0.382684j, -0.980785+0.195092j, -1.000000+0.000012j, -0.980801-0.195010j, -0.924059-0.382250j, -0.832692-0.553737j, -0.713104-0.701059j, -0.578055-0.815998j, -0.449249-0.893407j, -0.354950-0.934885j, -0.320174-0.947359j, -0.354950-0.934885j, -0.449249-0.893407j, -0.578055-0.815998j, -0.713104-0.701059j, -0.832692-0.553737j, -0.924059-0.382250j, -0.980801-0.195010j, -1.000000+0.000012j, -0.980785+0.195092j, -0.923879+0.382684j, -0.831470+0.555570j, -0.707107+0.707107j, -0.555570+0.831470j, -0.382683+0.923880j, -0.195090+0.980785j, 0.000000+1.000000j, 0.195090+0.980785j, 0.382683+0.923880j, 0.555570+0.831470j, 0.707107+0.707107j, 0.831470+0.555570j, 0.923879+0.382684j, 0.980785+0.195092j, 1.000000+0.000012j, 0.980801-0.195010j, 0.924059-0.382250j, 0.832692-0.553737j, 0.713104-0.701059j, 0.578055-0.815998j, 0.449249-0.893407j, 0.354950-0.934885j, 0.320174-0.947359j, 0.354950-0.934885j, 0.449249-0.893407j, 0.578055-0.815998j, 0.713104-0.701059j, 0.832692-0.553737j, 0.924059-0.382250j, 0.980801-0.195010j, 1.000000+0.000012j, 0.980785+0.195092j, 0.923879+0.382684j, 0.831470+0.555570j, 0.707107+0.707107j, 0.555570+0.831470j, 0.382683+0.923880j, 0.195090+0.980785j, 0.000000+1.000000j, -0.195090+0.980785j, -0.382683+0.923880j, -0.555570+0.831470j, -0.707107+0.707107j, -0.831470+0.555570j, -0.923879+0.382684j, -0.980785+0.195092j, -1.000000+0.000012j, -0.980801-0.195010j, -0.924059-0.382250j, -0.832692-0.553737j, -0.713104-0.701059j, -0.578055-0.815998j, -0.449249-0.893407j, -0.354949-0.934886j, -0.320163-0.947363j, -0.354874-0.934914j, -0.448830-0.893617j, -0.576256-0.817269j, -0.707107-0.707107j, -0.817269-0.576256j, -0.893617-0.448830j, -0.934915-0.354872j, -0.947366-0.320152j, -0.934915-0.354872j, -0.893617-0.448830j, -0.817269-0.576256j, -0.707107-0.707107j, -0.576256-0.817269j, -0.448830-0.893617j, -0.354874-0.934914j, -0.320163-0.947363j, -0.354949-0.934886j, -0.449249-0.893407j, -0.578055-0.815998j, -0.713104-0.701059j, -0.832692-0.553737j, -0.924059-0.382250j, -0.980801-0.195012j, -1.000000+0.000000j, -0.980801+0.195012j, -0.924059+0.382250j, -0.832692+0.553737j, -0.713104+0.701059j, -0.578055+0.815998j, -0.449249+0.893407j, -0.354950+0.934885j, -0.320174+0.947359j, -0.354950+0.934885j, -0.449249+0.893407j, -0.578055+0.815998j, -0.713104+0.701059j, -0.832692+0.553737j, -0.924059+0.382250j, -0.980801+0.195012j, -1.000000+0.000000j, -0.980801-0.195012j, -0.924059-0.382250j, -0.832692-0.553737j, -0.713104-0.701059j, -0.578055-0.815998j, -0.449249-0.893407j, -0.354950-0.934885j, -0.320174-0.947359j, -0.354950-0.934885j, -0.449249-0.893407j, -0.578055-0.815998j, -0.713104-0.701059j, -0.832692-0.553737j, -0.924059-0.382250j, -0.980801-0.195010j, -1.000000+0.000012j, -0.980785+0.195092j, -0.923879+0.382684j, -0.831470+0.555570j, -0.707107+0.707107j, -0.555570+0.831470j, -0.382684+0.923879j, -0.195092+0.980785j, -0.000012+1.000000j, 0.195010+0.980801j, 0.382250+0.924059j, 0.553737+0.832692j, 0.701059+0.713104j, 0.815998+0.578055j, 0.893407+0.449249j, 0.934886+0.354949j, 0.947363+0.320163j, 0.934914+0.354874j, 0.893617+0.448830j, 0.817269+0.576256j, 0.707107+0.707107j, 0.576256+0.817269j, 0.448830+0.893617j, 0.354872+0.934915j, 0.320152+0.947366j, 0.354872+0.934915j, 0.448830+0.893617j, 0.576256+0.817269j, 0.707107+0.707107j, 0.817269+0.576256j, 0.893617+0.448830j, 0.934915+0.354872j, 0.947366+0.320152j, 0.934915+0.354872j, 0.893617+0.448830j, 0.817269+0.576256j, 0.707107+0.707107j, 0.576256+0.817269j, 0.448830+0.893617j, 0.354874+0.934914j, 0.320163+0.947363j, 0.354949+0.934886j, 0.449249+0.893407j, 0.578055+0.815998j, 0.713104+0.701059j, 0.832692+0.553737j, 0.924059+0.382250j, 0.980801+0.195010j, 1.000000-0.000012j, 0.980785-0.195092j, 0.923879-0.382684j, 0.831470-0.555570j, 0.707107-0.707107j, 0.555570-0.831470j, 0.382684-0.923879j, 0.195092-0.980785j, 0.000012-1.000000j, -0.195010-0.980801j, -0.382250-0.924059j, -0.553737-0.832692j, -0.701059-0.713104j, -0.815998-0.578055j, -0.893407-0.449249j, -0.934885-0.354950j, -0.947359-0.320174j, -0.934885-0.354950j, -0.893407-0.449249j, -0.815998-0.578055j, -0.701059-0.713104j, -0.553737-0.832692j, -0.382250-0.924059j, -0.195010-0.980801j, 0.000012-1.000000j, 0.195092-0.980785j, 0.382684-0.923879j, 0.555570-0.831470j, 0.707107-0.707107j, 0.831470-0.555570j, 0.923880-0.382683j, 0.980785-0.195090j, 1.000000-0.000000j, 0.980785+0.195090j, 0.923880+0.382683j, 0.831470+0.555570j, 0.707107+0.707107j, 0.555570+0.831470j, 0.382684+0.923879j, 0.195092+0.980785j, 0.000012+1.000000j, -0.195010+0.980801j, -0.382250+0.924059j, -0.553737+0.832692j, -0.701059+0.713104j, -0.815998+0.578055j, -0.893407+0.449249j, -0.934886+0.354949j, -0.947363+0.320163j, -0.934914+0.354874j, -0.893617+0.448830j, -0.817269+0.576256j, -0.707107+0.707107j, -0.576256+0.817269j, -0.448830+0.893617j, -0.354874+0.934914j, -0.320163+0.947363j, -0.354949+0.934886j, -0.449249+0.893407j, -0.578055+0.815998j, -0.713104+0.701059j, -0.832692+0.553737j, -0.924059+0.382250j, -0.980801+0.195010j, -1.000000-0.000012j, -0.980785-0.195092j, -0.923879-0.382684j, -0.831470-0.555570j, -0.707107-0.707107j, -0.555570-0.831470j, -0.382684-0.923879j, -0.195092-0.980785j, -0.000012-1.000000j, 0.195010-0.980801j, 0.382250-0.924059j, 0.553737-0.832692j, 0.701059-0.713104j, 0.815998-0.578055j, 0.893407-0.449249j, 0.934886-0.354949j, 0.947363-0.320163j, 0.934914-0.354874j, 0.893617-0.448830j, 0.817269-0.576256j, 0.707107-0.707107j, 0.576256-0.817269j, 0.448830-0.893617j, 0.354872-0.934915j, 0.320152-0.947366j, 0.354872-0.934915j, 0.448830-0.893617j, 0.576256-0.817269j, 0.707107-0.707107j, 0.817269-0.576256j, 0.893617-0.448830j, 0.934915-0.354872j, 0.947366-0.320152j, 0.934915-0.354872j, 0.893617-0.448830j, 0.817269-0.576256j, 0.707107-0.707107j, 0.576256-0.817269j, 0.448830-0.893617j, 0.354874-0.934914j, 0.320163-0.947363j, 0.354949-0.934886j, 0.449249-0.893407j, 0.578055-0.815998j, 0.713104-0.701059j, 0.832692-0.553737j, 0.924059-0.382250j, 0.980801-0.195010j, 1.000000+0.000012j, 0.980785+0.195092j, 0.923879+0.382684j, 0.831470+0.555570j, 0.707107+0.707107j, 0.555570+0.831470j, 0.382683+0.923880j, 0.195090+0.980785j, 0.000000+1.000000j, -0.195090+0.980785j, -0.382683+0.923880j, -0.555570+0.831470j, -0.707107+0.707107j, -0.831470+0.555570j, -0.923879+0.382684j, -0.980785+0.195092j, -1.000000+0.000012j, -0.980801-0.195010j, -0.924059-0.382250j, -0.832692-0.553737j, -0.713104-0.701059j, -0.578055-0.815998j, -0.449249-0.893407j, -0.354949-0.934886j, -0.320163-0.947363j, -0.354874-0.934914j, -0.448830-0.893617j, -0.576256-0.817269j, -0.707107-0.707107j, -0.817269-0.576256j, -0.893617-0.448830j, -0.934914-0.354874j, -0.947363-0.320163j, -0.934886-0.354949j, -0.893407-0.449249j, -0.815998-0.578055j, -0.701059-0.713104j, -0.553737-0.832692j, -0.382250-0.924059j, -0.195012-0.980801j, -0.000000-1.000000j, 0.195012-0.980801j, 0.382250-0.924059j, 0.553737-0.832692j, 0.701059-0.713104j, 0.815998-0.578055j, 0.893407-0.449249j, 0.934885-0.354950j, 0.947359-0.320174j, 0.934885-0.354950j, 0.893407-0.449249j, 0.815998-0.578055j, 0.701059-0.713104j, 0.553737-0.832692j, 0.382250-0.924059j, 0.195010-0.980801j, -0.000012-1.000000j, -0.195092-0.980785j, -0.382684-0.923879j, -0.555570-0.831470j, -0.707107-0.707107j, -0.831470-0.555570j, -0.923879-0.382684j, -0.980785-0.195092j, -1.000000-0.000012j, -0.980801+0.195010j, -0.924059+0.382250j, -0.832692+0.553737j, -0.713104+0.701059j, -0.578055+0.815998j, -0.449249+0.893407j, -0.354950+0.934885j, -0.320174+0.947359j, -0.354950+0.934885j, -0.449249+0.893407j, -0.578055+0.815998j, -0.713104+0.701059j, -0.832692+0.553737j, -0.924059+0.382250j, -0.980801+0.195012j, -1.000000+0.000000j, -0.980801-0.195012j, -0.924059-0.382250j, -0.832692-0.553737j, -0.713104-0.701059j, -0.578055-0.815998j, -0.449249-0.893407j, -0.354950-0.934885j, -0.320174-0.947359j, -0.354950-0.934885j, -0.449249-0.893407j, -0.578055-0.815998j, -0.713104-0.701059j, -0.832692-0.553737j, -0.924059-0.382250j, -0.980801-0.195012j, -1.000000+0.000000j, -0.980801+0.195012j, -0.924059+0.382250j, -0.832692+0.553737j, -0.713104+0.701059j, -0.578055+0.815998j, -0.449249+0.893407j, -0.354950+0.934885j, -0.320174+0.947359j, -0.354950+0.934885j, -0.449249+0.893407j, -0.578055+0.815998j, -0.713104+0.701059j, -0.832692+0.553737j, -0.924059+0.382250j, -0.980801+0.195012j, -1.000000+0.000000j, -0.980801-0.195012j, -0.924059-0.382250j, -0.832692-0.553737j, -0.713104-0.701059j, -0.578055-0.815998j, -0.449249-0.893407j, -0.354950-0.934885j, -0.320174-0.947359j, -0.354950-0.934885j, -0.449249-0.893407j, -0.578055-0.815998j, -0.713104-0.701059j, -0.832692-0.553737j, -0.924059-0.382250j, -0.980801-0.195010j, -1.000000+0.000012j, -0.980785+0.195092j, -0.923879+0.382684j, -0.831470+0.555570j, -0.707107+0.707107j, -0.555570+0.831470j, -0.382684+0.923879j, -0.195092+0.980785j, -0.000012+1.000000j, 0.195010+0.980801j, 0.382250+0.924059j, 0.553737+0.832692j, 0.701059+0.713104j, 0.815998+0.578055j, 0.893407+0.449249j, 0.934885+0.354950j, 0.947359+0.320174j, 0.934885+0.354950j, 0.893407+0.449249j, 0.815998+0.578055j, 0.701059+0.713104j, 0.553737+0.832692j, 0.382250+0.924059j, 0.195010+0.980801j, -0.000012+1.000000j, -0.195092+0.980785j, -0.382684+0.923879j, -0.555570+0.831470j, -0.707107+0.707107j, -0.831470+0.555570j, -0.923880+0.382683j, -0.980785+0.195090j, -1.000000+0.000000j, -0.980785-0.195090j, -0.923880-0.382683j, -0.831470-0.555570j, -0.707107-0.707107j, -0.555570-0.831470j, -0.382684-0.923879j, -0.195092-0.980785j, -0.000012-1.000000j, 0.195010-0.980801j, 0.382250-0.924059j, 0.553737-0.832692j, 0.701059-0.713104j, 0.815998-0.578055j, 0.893407-0.449249j, 0.934885-0.354950j, 0.947359-0.320174j, 0.934885-0.354950j, 0.893407-0.449249j, 0.815998-0.578055j, 0.701059-0.713104j, 0.553737-0.832692j, 0.382250-0.924059j, 0.195010-0.980801j, -0.000012-1.000000j, -0.195092-0.980785j, -0.382684-0.923879j, -0.555570-0.831470j, -0.707107-0.707107j, -0.831470-0.555570j, -0.923879-0.382684j, -0.980785-0.195092j, -1.000000-0.000012j, -0.980801+0.195010j, -0.924059+0.382250j, -0.832692+0.553737j, -0.713104+0.701059j, -0.578055+0.815998j, -0.449249+0.893407j, -0.354950+0.934885j, -0.320174+0.947359j, -0.354950+0.934885j, -0.449249+0.893407j, -0.578055+0.815998j, -0.713104+0.701059j, -0.832692+0.553737j, -0.924059+0.382250j, -0.980801+0.195010j, -1.000000-0.000012j, -0.980785-0.195092j, -0.923879-0.382684j, -0.831470-0.555570j, -0.707107-0.707107j, -0.555570-0.831470j, -0.382683-0.923880j, -0.195090-0.980785j, -0.000000-1.000000j, 0.195090-0.980785j, 0.382683-0.923880j, 0.555570-0.831470j, 0.707107-0.707107j, 0.831470-0.555570j, 0.923879-0.382684j, 0.980785-0.195092j, 1.000000-0.000012j, 0.980801+0.195010j, 0.924059+0.382250j, 0.832692+0.553737j, 0.713104+0.701059j, 0.578055+0.815998j, 0.449249+0.893407j, 0.354950+0.934885j, 0.320174+0.947359j, 0.354950+0.934885j, 0.449249+0.893407j, 0.578055+0.815998j, 0.713104+0.701059j, 0.832692+0.553737j, 0.924059+0.382250j, 0.980801+0.195010j, 1.000000-0.000012j, 0.980785-0.195092j, 0.923879-0.382684j, 0.831470-0.555570j, 0.707107-0.707107j, 0.555570-0.831470j, 0.382683-0.923880j, 0.195090-0.980785j, -0.000000-1.000000j, -0.195090-0.980785j, -0.382683-0.923880j, -0.555570-0.831470j, -0.707107-0.707107j, -0.831470-0.555570j, -0.923879-0.382684j, -0.980785-0.195092j, -1.000000-0.000012j, -0.980801+0.195010j, -0.924059+0.382250j, -0.832692+0.553737j, -0.713104+0.701059j, -0.578055+0.815998j, -0.449249+0.893407j, -0.354950+0.934885j, -0.320174+0.947359j, -0.354950+0.934885j, -0.449249+0.893407j, -0.578055+0.815998j, -0.713104+0.701059j, -0.832692+0.553737j, -0.924059+0.382250j, -0.980801+0.195010j, -1.000000-0.000012j, -0.980785-0.195092j, -0.923879-0.382684j, -0.831470-0.555570j, -0.707107-0.707107j, -0.555570-0.831470j, -0.382683-0.923880j, -0.195090-0.980785j, -0.000000-1.000000j, 0.195090-0.980785j, 0.382683-0.923880j, 0.555570-0.831470j, 0.707107-0.707107j, 0.831470-0.555570j, 0.923879-0.382684j, 0.980785-0.195092j, 1.000000-0.000012j, 0.980801+0.195010j, 0.924059+0.382250j, 0.832692+0.553737j, 0.713104+0.701059j, 0.578055+0.815998j, 0.449249+0.893407j, 0.354949+0.934886j, 0.320163+0.947363j, 0.354874+0.934914j, 0.448830+0.893617j, 0.576256+0.817269j, 0.707107+0.707107j, 0.817269+0.576256j, 0.893617+0.448830j, 0.934915+0.354872j, 0.947366+0.320152j, 0.934915+0.354872j, 0.893617+0.448830j, 0.817269+0.576256j, 0.707107+0.707107j, 0.576256+0.817269j, 0.448830+0.893617j, 0.354874+0.934914j, 0.320163+0.947363j, 0.354949+0.934886j, 0.449249+0.893407j, 0.578055+0.815998j, 0.713104+0.701059j, 0.832692+0.553737j, 0.924059+0.382250j, 0.980801+0.195012j, 1.000000-0.000000j, 0.980801-0.195012j, 0.924059-0.382250j, 0.832692-0.553737j, 0.713104-0.701059j, 0.578055-0.815998j, 0.449249-0.893407j, 0.354950-0.934885j, 0.320174-0.947359j, 0.354950-0.934885j, 0.449249-0.893407j, 0.578055-0.815998j, 0.713104-0.701059j, 0.832692-0.553737j, 0.924059-0.382250j, 0.980801-0.195012j, 1.000000-0.000000j, 0.980801+0.195012j, 0.924059+0.382250j, 0.832692+0.553737j, 0.713104+0.701059j, 0.578055+0.815998j, 0.449249+0.893407j, 0.354949+0.934886j, 0.320163+0.947363j, 0.354874+0.934914j, 0.448830+0.893617j, 0.576256+0.817269j, 0.707107+0.707107j, 0.817269+0.576256j, 0.893617+0.448830j, 0.934915+0.354872j, 0.947366+0.320152j, 0.934915+0.354872j, 0.893617+0.448830j, 0.817269+0.576256j, 0.707107+0.707107j, 0.576256+0.817269j, 0.448830+0.893617j, 0.354874+0.934914j, 0.320163+0.947363j, 0.354949+0.934886j, 0.449249+0.893407j, 0.578055+0.815998j, 0.713104+0.701059j, 0.832692+0.553737j, 0.924059+0.382250j, 0.980801+0.195010j, 1.000000-0.000012j, 0.980785-0.195092j, 0.923879-0.382684j, 0.831470-0.555570j, 0.707107-0.707107j, 0.555570-0.831470j, 0.382684-0.923879j, 0.195092-0.980785j, 0.000012-1.000000j, -0.195010-0.980801j, -0.382250-0.924059j, -0.553737-0.832692j, -0.701059-0.713104j, -0.815998-0.578055j, -0.893407-0.449249j, -0.934886-0.354949j, -0.947363-0.320163j, -0.934914-0.354874j, -0.893617-0.448830j, -0.817269-0.576256j, -0.707107-0.707107j, -0.576256-0.817269j, -0.448830-0.893617j, -0.354874-0.934914j, -0.320163-0.947363j, -0.354949-0.934886j, -0.449249-0.893407j, -0.578055-0.815998j, -0.713104-0.701059j, -0.832692-0.553737j, -0.924059-0.382250j, -0.980801-0.195010j, -1.000000+0.000012j, -0.980785+0.195092j, -0.923879+0.382684j, -0.831470+0.555570j, -0.707107+0.707107j, -0.555570+0.831470j, -0.382684+0.923879j, -0.195092+0.980785j, -0.000012+1.000000j, 0.195010+0.980801j, 0.382250+0.924059j, 0.553737+0.832692j, 0.701059+0.713104j, 0.815998+0.578055j, 0.893407+0.449249j, 0.934885+0.354950j, 0.947359+0.320174j, 0.934885+0.354950j, 0.893407+0.449249j, 0.815998+0.578055j, 0.701059+0.713104j, 0.553737+0.832692j, 0.382250+0.924059j, 0.195010+0.980801j, -0.000012+1.000000j, -0.195092+0.980785j, -0.382684+0.923879j, -0.555570+0.831470j, -0.707107+0.707107j, -0.831470+0.555570j, -0.923880+0.382683j, -0.980785+0.195090j, -1.000000+0.000000j, -0.980785-0.195090j, -0.923880-0.382683j, -0.831470-0.555570j, -0.707107-0.707107j, -0.555570-0.831470j, -0.382684-0.923879j, -0.195092-0.980785j, -0.000012-1.000000j, 0.195010-0.980801j, 0.382250-0.924059j, 0.553737-0.832692j, 0.701059-0.713104j, 0.815998-0.578055j, 0.893407-0.449249j, 0.934886-0.354949j, 0.947363-0.320163j, 0.934914-0.354874j, 0.893617-0.448830j, 0.817269-0.576256j, 0.707107-0.707107j, 0.576256-0.817269j, 0.448830-0.893617j, 0.354873-0.934914j, 0.320157-0.947364j, 0.354911-0.934900j, 0.449039-0.893512j, 0.577156-0.816634j, 0.710112-0.704089j, 0.825057-0.565049j, 0.909448-0.415819j, 0.961187-0.275898j]
fs = 4e3



def process_data(path, noise_sel, threshold, ax0, ax1, ax2, freq_offset = 0):
    name = path.split('/')[-1].split('.')[0]
    asms = np.fromfile(path, dtype = 'complex64').reshape((-1,1024))
    
    plt.figure()
    asm_max_in_f = np.max(np.abs(asms), axis = 1)
    plt.plot(asm_max_in_f)
    plt.savefig(f'images/asm01_{name}.png', dpi = 300, bbox_inches = 'tight')
    
    corr_per_f = np.fft.fftshift(np.average(np.abs(asms[:])**2, axis = 0))
    plt.figure()
    plt.plot(corr_per_f)
    plt.plot(noise_sel, corr_per_f[noise_sel], '.')
    plt.savefig(f'images/asm02_{name}.png', dpi = 300, bbox_inches = 'tight')
    
    asms /= np.sqrt(np.average(corr_per_f[noise_sel]))
    asm_max_in_f = np.max(np.abs(asms), axis = 1)
    
    plt.figure()
    plt.axhline(y = threshold, linestyle = '--', color = 'red')
    plt.plot(asm_max_in_f)
    plt.savefig(f'images/asm03_{name}.png', dpi = 300, bbox_inches = 'tight')
    
    sel_thresh = asm_max_in_f > threshold
    lmax = np.where(sel_thresh)[0][scipy.signal.argrelextrema(asm_max_in_f[sel_thresh], np.greater)][:-2]
    # Filter out sidelobes
    lmax = lmax[np.concatenate((~((lmax[1:] - lmax[:-1] < 1000) & (asm_max_in_f[lmax[1:]] > asm_max_in_f[lmax[:-1]])), [True]))]
    lmax = lmax[np.concatenate(([True], ~((lmax[1:] - lmax[:-1] < 1000) & (asm_max_in_f[lmax[1:]] < asm_max_in_f[lmax[:-1]]))))]
    freq_max = np.argmax(np.abs(asms[lmax]), axis = 1)
    
    #fig, ax = plt.subplots(2,1,figsize = (12, 10), facecolor = 'w')
    for l,f in zip(lmax, freq_max):
        ax0.plot((np.arange(2*len(taps)) - len(taps)) / fs,\
                   np.abs(asms[l-len(taps):l+len(taps),f]), color = 'C0', alpha = 0.1)
        #ax0.set_xlabel('Offset (s)')
        ax0.set_ylabel('Correlation', labelpad=1)
        ax1.plot((np.arange(200) - 100) / fs,\
                   np.abs(asms[l-100:l+100,f]), color = 'C0', alpha = 0.1)
        #ax1.set_xlabel('Offset (s)')
        ax1.set_ylabel('Correlation', labelpad=1)
        ax0.tick_params(direction='in', length=2, pad=3)
        ax1.tick_params(direction='in', length=2, pad=3)

    #ax0.set_title('Detected ASMs')
    #plt.savefig(f'images/asm_peaks_{name}.png', dpi = 300, bbox_inches = 'tight')
    
    #fig, ax1 = plt.subplots(figsize = (12, 6), facecolor = 'w')
    ax2a = ax2
    ax2b = ax2a.twinx()
    peaks = 10*np.log10(np.abs(asms[lmax,freq_max])**2-1) + 10*np.log10(fs/asms.shape[1]) - 10*np.log10(250)
    wide_window = 5
    peaks_wide = 10*np.log10(np.sum(np.abs(asms[lmax.reshape((-1,1)),freq_max.reshape((-1,1))+np.arange(-wide_window,1+wide_window).reshape((1,-1))])**2 - 1, axis = 1)) \
        + 10*np.log10(fs/asms.shape[1]) - 10*np.log10(250)
    lns1=ax2b.plot(np.fft.fftfreq(len(taps), 1/fs)[freq_max] + freq_offset, 'x-', color = 'C3', label='Frequency')
    lns2=ax2a.plot(peaks, 'o-', label='Correlation (with scalloping loss)')
    lns3=ax2a.plot(peaks_wide, 'o-', label='Correlation (no scalloping loss)')
    #ax2a.set_title('Correlation peaks')
    #ax2a.set_xlabel('ASM detection number')
    ax2a.set_ylabel('Correlation Eb/N0 (dB)', labelpad=1)
    ax2b.set_ylabel('Frequency (Hz)', labelpad=1);
    #ax1.set_ylim([-4,19])
    #ax2.set_ylim([-2100,-1200])
    lns=lns1+lns2+lns3;
    labs=[l.get_label() for l in lns]
    ax2.legend(lns, labs, fontsize=5)
    ax2a.tick_params(direction='in', length=2, pad=3, top=True)
    ax2b.tick_params(direction='in', length=2, pad=3)
    #ax2.legend([, 'Correlation (with scalloping loss)', 'Correlation (no scalloping loss)', 'Frequency'])
    #plt.savefig(f'images/asm_detection_{name}.png', dpi = 300, bbox_inches = 'tight')

figsize = [200/25.4, 200/25.4]
fig, ax = plt.subplots(nrows = 4, ncols = 3, figsize=figsize, facecolor = 'w')
process_data('data/dwingeloo_fft.c64', np.concatenate((np.arange(100,425), np.arange(750,900))), 40, ax[0][0], ax[0][1], ax[0][2], freq_offset = -1600)
process_data('data/wakayama_fft.c64', np.concatenate((np.arange(100,250), np.arange(600,900))), 20, ax[1][0], ax[1][1], ax[1][2], freq_offset = -1600)
process_data('data/shahe_fft.c64', np.concatenate((np.arange(100,250), np.arange(600,900))), 14, ax[2][0], ax[2][1], ax[2][2], freq_offset = -1600)
process_data('data/harbin_fft.c64', np.concatenate((np.arange(100,250), np.arange(600,900))), 5.1, ax[3][0], ax[3][1], ax[3][2], freq_offset = -1600)
ax[3][0].set_xlabel('Offset (s)', labelpad=1)
ax[3][1].set_xlabel('Offset (s)', labelpad=1)
ax[3][2].set_xlabel('ASM detection number', labelpad=1)
fig.savefig('asm.png', dpi = 300, bbox_inches = 'tight')

